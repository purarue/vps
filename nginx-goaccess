#!/usr/bin/env bash

CACHE_LOGS="${CACHE_LOGS:-$HOME/.cache/nginx_go}"
mkdir -p "$CACHE_LOGS"

ACCESS_LOG="$CACHE_LOGS/access.log"
HTML_FILE="$CACHE_LOGS/access.html"
JSON_FILE="$CACHE_LOGS/access.json"

if [[ ! -e "$CACHE_LOGS/Makefile" ]]; then
	cat >"$CACHE_LOGS/Makefile" <<EOF
# If the access.log file is older than the access.html file, recompute

REPOS_DIR = "${REPOS}"

all: access.html

access.html: access.log
	\$(REPOS_DIR)/vps/nginx-goaccess parsehtml

EOF
fi

goaccess_log() {
	echo "goaccess $*"
	goaccess "$@" || return $?
}

nginx-goaccess() {
	local args=()
	args=(--real-os --no-progress --ignore-crawlers --log-format=COMBINED -f "$ACCESS_LOG")
	case "$1" in
	parsehtml)
		goaccess_log "${args[@]}" -o "$HTML_FILE" || {
			echo "goaccess failed, trying to sync" >&2
			nginx-goaccess sync
			goaccess_log "${args[@]}" -o "$HTML_FILE"
		}
		;;
	parsehtmlcached)
		cd "$CACHE_LOGS" || exit 1
		make
		;;
	view)
		if [[ -f "$HTML_FILE" ]]; then
			openurl "$HTML_FILE"
		else
			nginx-goaccess parsehtml
		fi
		;;
	json)
		goaccess_log "${args[@]}" -o "$JSON_FILE"
		echo "$JSON_FILE"
		;;
	sync)
		rsync -Pavhz -e ssh vultr:/var/log/nginx/access.log "$ACCESS_LOG" || return $?
		touch "$ACCESS_LOG"
		;;
	cli)
		goaccess_log "${args[@]}"
		;;
	*)
		echo "Usage: $0 {parsehtml|parsehtmlcached|view|json|sync|cli}"
		exit 1
		;;
	esac
}

if [[ ! -e "$ACCESS_LOG" ]]; then
	nginx-goaccess sync
fi
nginx-goaccess "$@"
