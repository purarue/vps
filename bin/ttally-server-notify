#!/usr/bin/env bash

set -eu
set -o pipefail

ensure_exists() {
	if [[ ! -e "${1?:must pass path}" ]]; then
		printf 'Expected path %s, does not exist\n' "$1" >&2
		exit 1
	fi
}
clone_if_not_exists() {
	if [[ ! -d "$2" ]]; then
		git clone "$1" "$2" && {
			[[ -e "$2/setup.py" ]] && python3 -m pip install "$2"
		}
	fi
}

SYNC_DIR="${HOME}/.ttally_sync"

setup_repos() {
	mkdir -p "$SYNC_DIR/repos"
	clone_if_not_exists https://github.com/purarue/ttally "$SYNC_DIR/repos/ttally"
	clone_if_not_exists https://github.com/purarue/reminder-sink "$SYNC_DIR/repos/reminder-sink"
	clone_if_not_exists git@github.com:purarue/personal "$SYNC_DIR/repos/personal"
}

ensure_exists "$SYNC_DIR"
ensure_exists "$TTALLY_DATA_DIR"
ensure_exists "$REMINDER_SINK_SILENT_FILE"
setup_repos

# shellcheck disable=1091
[[ -z "${TTALLY_NTFY_TOPIC:-}" && -e "$SYNC_DIR/.env" ]] && . "$SYNC_DIR/.env"

if [[ -z "${TTALLY_NTFY_TOPIC:-}" ]]; then
	echo 'TTALLY_NTFY_TOPIC is unset' >&2
	exit 1
fi

if [[ -z "${TTALLY_FILTERS:-}" ]]; then
	echo 'TTALLY_FILTERS is unset' >&2
	exit 1
fi

if [[ -z "${SELF_TYPES_FILE:-}" ]]; then
	echo 'SELF_TYPES_FILE is unset' >&2
	exit 1
fi

export TTALLY_NTFY_TOPIC SELF_TYPES_FILE

cp -auv "$HOME/.dotfiles/.config/ttally.py" "$HOME/.config/ttally.py"

if [[ -n "$1" ]]; then
	echo "Running $*" >&2
	sh -c "$@" || exit $?
fi

while true; do
	DUMP_QUERIES=1 ttally-when-queries | ttally-send-ntfy run - --expired --filter "$TTALLY_FILTERS" || exit $?
	sleep 2m
done
