#!/usr/bin/env bash
# helper script for syncing files to my server using rsync
# this syncs a copy of the directory, if you delete files
# locally, it deletes it up on the remote
#
# remsync [FILE...] [DIR...]
#
# If files/directories are passed as arguments, they're copied to
# $FROM_DIR and are then pushed to the server
#
# to delete remote files for REMSYNC_PUBLIC, set REMSYNC_DELETE=1
#
# files are served by nginx as static files, with:
#
# private remsync
#
# rewrite ^/f$ /f/ permanent;
#
# location /f/ {
#   alias /home/user/f/;  # location
#
#   # dont serve directories
#   try_files $uri =404;
#   autoindex off;
#
#   # make sure files are downloaded instead of viewed
#   expires -1;
#   default_type application/octet-stream;
# }
#
# public remsync
#
# rewrite ^/p$ /p/ permanent;
#
# location /p/ {
#   alias /home/user/p/;  # location
#   try_files $uri $uri/ =404;
#   autoindex on;
#   autoindex_exact_size off;
#   autoindex_localtime on;
#   add_header "Access-Control-Allow-Origin"  *;
#   expires 1h;
#   add_header Cache-Control "public";
# }

split() {
	echo "#########################"
}

########## CONFIGURATION

# server information
readonly SYNC_USER="${oname?:name not set}"
readonly SSH_TO='vultr' # setup in ~/.ssh/config
declare TO_DIR="/home/${SYNC_USER}/f/"
[[ -n "$REMSYNC_PUBLIC" ]] && TO_DIR="/home/${SYNC_USER}/p/"
readonly BASE_URL="https://purarue.xyz"
readonly TO_DIR

# local information
declare FROM_DIR="${XDG_DOCUMENTS_DIR}/remsync/"
[[ -n "$REMSYNC_PUBLIC" ]] && FROM_DIR="${HOME}/Files/remsync_public/"
readonly FROM_DIR

mkdir -p "${FROM_DIR}"

echo "$FROM_DIR"

########## RUN

# make local dir if it doesn't exist
[[ ! -d "$FROM_DIR" ]] && mkdir -p "$FROM_DIR"

# if files were passed, copy files to local sync dir
if (($# > 0)); then
	for path in "$@"; do
		if [[ -r "$path" ]]; then
			cp -R "$path" "$FROM_DIR"
		else
			printf "No such file: %s\n" "$path" 1>&2
			exit 1
		fi
	done
	split
fi

# sync directory
rsync_args=(--chmod='D0755,F644' --archive --verbose --human-readable --partial --progress)
[[ -z "$REMSYNC_PUBLIC" || -n "$REMSYNC_DELETE" ]] && rsync_args+=("--delete-before")
rsync_args+=(-e 'ssh' "$FROM_DIR" "${SSH_TO}:${TO_DIR}")
echo 'Running: rsync' "${rsync_args[@]}" >&2
retry -- rsync "${rsync_args[@]}" || exit $?

split

# print urls of synced files
if (($# > 0)); then
	split
	# get the private/public part of the URL (f/F)
	dir_part="$(rev <<<"$TO_DIR" | cut -d'/' -f 2)"
	# for each item
	for path in "$@"; do
		basename_path="$(basename "$path")"
		# if directory
		if [[ ! -d "$path" ]]; then
			# if file, just use filename to get url
			FILEURL="$(printf "%s/%s/%s\n" "$BASE_URL" "$dir_part" "$basename_path")"
			echo "$FILEURL"
			[[ "$#" == 1 && -f "$1" ]] && {
				printf "%s" "$FILEURL" | clipcopy
				notify "Copied ${FILEURL} to your clipboard"
			}
		fi
	done
fi
