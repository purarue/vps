#!/usr/bin/env bash

_deploy_ssh() {
	# shellcheck disable=SC2029
	ssh vultr SKIP_LOGS="$SKIP_LOGS" ./vps/bin/vps_deploy "$@"
}

deploy() {
	case "$1" in
	glue)
		_deploy_ssh ./code/glue glue-server
		;;
	exobrain)
		SKIP_LOGS=1 _deploy_ssh ./code/exobrain - vps_update_exobrain
		;;
	dbsentinel)
		_deploy_ssh ./code/dbsentinel dbsentinel-frontend,dbsentinel-backend
		;;
	dbsentinel-loop)
		_deploy_ssh ./code/dbsentinel restart-dbsentinel
		;;
	checker-mal)
		_deploy_ssh ./code/checker_mal checker-mal-server
		;;
	feed)
		_deploy_ssh ./code/my_feed feed-frontend,feed-backend
		;;
	filmswap)
		_deploy_ssh ./code/filmswap filmswap
		;;
	mal-notify-bot)
		_deploy_ssh ./code/mal-notify-bot restart-mal-notify-bot
		;;
	projects)
		_deploy_ssh ./code/projects projects
		;;
	currently_listening)
		_deploy_ssh ./code/currently_listening currently_listening,listenbrainz_client_poll make
		;;
	dotfiles)
		SKIP_LOGS=1 _deploy_ssh ./.dotfiles - vps_update_dotfiles
		;;
	vps)
		SKIP_LOGS=1 _deploy_ssh ./vps -
		;;
	ttally)
		_deploy_ssh ./vps ttally-ntfy
		;;
	*)
		if [[ -n "$1" ]]; then
			echo "unknown deploy target: $1" >&2
		else
			echo "no deploy target specified" >&2
		fi
		echo "available targets: $(list_deploy_targets | tr '\n' ' ')" >&2
		return 1
		;;
	esac
}

list_deploy_targets() {
	grep -oP '^\s+([\w\-]+)\)\s*$' "$0" | tr -d ') \t'
}

if [[ -n "$VPS_DEPLOY_COMPDEF" ]]; then
	list_deploy_targets
	exit 0
fi

deploy "$@" || exit $?
